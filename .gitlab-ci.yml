image: maven:latest

before_script:
  - chmod +x mvnw

#custom stages
stages:
  - build
  - test
  - package
  - dockerise

variables:
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"   #local maven repo

#caching dependencies
cache:
  paths:
    - .m2/repository

Build:
  stage: build
  script:
    - mvn $MAVEN_OPTS clean compile

Test:
  stage: test
  script:
    - mvn $MAVEN_OPTS test
  artifacts:
    paths:
      - target/surefire-reports/TEST-*.xml  #test artifacts path
    reports:
      junit: target/surefire-reports/TEST-*.xml   #junit reports path

Package artifact:
  image: bellsoft/liberica-openjdk-alpine:8   #pure jdk8 image for package
  stage: package
  script:
    - ./mvnw package  #package using maven wrapper
  artifacts:
    paths:
      - target/*.jar

Dockerise:
  stage: dockerise
  image: docker:latest
  only:
    - tags  #build image only for tags
  when: manual  #manual dockerise
  services:
    - docker:dind   #take docker from outer runner and make image
  script:
    - "cp $(ls target/*.jar) docker/financial-app.jar"  #copy jar file from target to docker folder
    - cd docker
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG . #build image
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com  #login in registry gitlab (container registry for images)
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG   #push image
